{"version":3,"sources":["data/index.ts","components/messageItems/Message.tsx","components/messageItems/Response.tsx","components/messageItems/Typing.tsx","components/messageHistory/MessageHistory.tsx","App.tsx","index.tsx"],"names":["messages","id","from","name","type","time","text","Message","className","Response","Typing","MessageHistory","length","map","key","App","render","StrictMode","document","getElementById"],"mappings":"0MAAaA,G,KAAW,CACtB,CACEC,GAAI,cACJC,KAAM,CAAEC,KAAM,kCACdC,KAAM,WACNC,KAAM,QACNC,KAAM,kRAER,CACEL,GAAI,cACJC,KAAM,CAAEC,KAAM,wCACdC,KAAM,UACNC,KAAM,QACNC,KACE,8bAEJ,CACEL,GAAI,cACJC,KAAM,CAAEC,KAAM,kCACdC,KAAM,WACNC,KAAM,QACNC,KACE,8rBAEJ,CACEL,GAAI,cACJC,KAAM,CAAEC,KAAM,wCACdC,KAAM,UACNC,KAAM,QACNC,KAAM,6RAER,CACEL,GAAI,cACJC,KAAM,CAAEC,KAAM,wCACdC,KAAM,SACNC,KAAM,WCrBKE,EAXmB,SAAC,GAAD,IAAGJ,EAAH,EAAGA,KAAMG,EAAT,EAASA,KAAMD,EAAf,EAAeA,KAAf,OAChC,wBAAIG,UAAU,YACZ,yBAAKA,UAAU,4BACb,0BAAMA,UAAU,qBAAqBH,GADvC,aAEE,0BAAMG,UAAU,qBAAqBL,GACrC,uBAAGK,UAAU,qBAEf,yBAAKA,UAAU,qCAAqCF,KCMzCG,EAboB,SAAC,GAAD,IAAGN,EAAH,EAAGA,KAAMG,EAAT,EAASA,KAAMD,EAAf,EAAeA,KAAf,OACjC,4BACE,yBAAKG,UAAU,gBACb,0BAAMA,UAAU,qBACd,uBAAGA,UAAU,wBACZL,GAEH,0BAAMK,UAAU,qBAAqBH,IAEvC,yBAAKG,UAAU,sBAAsBF,KCV1BI,EAFA,kBAAM,MC0CNC,EArB0B,SAAC,GAAkB,IAAhBX,EAAe,EAAfA,SAC1C,OAAKA,EAASY,OAIZ,4BACGZ,EAASa,KACR,YAAoE,IAAjEZ,EAAgE,EAAhEA,GAAYE,EAAoD,EAA5DD,KAAQC,KAAQC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,KACjC,MAAgB,YAATF,EACL,kBAAC,EAAD,CAASU,IAAKb,EAAIE,KAAMA,EAAME,KAAMA,EAAMC,KAAMA,IACrC,aAATF,EACF,kBAAC,EAAD,CAAUU,IAAKb,EAAIE,KAAMA,EAAME,KAAMA,EAAMC,KAAMA,IAEjD,kBAAC,EAAD,CAAQQ,IAAKb,QAXd,MCRIc,EAVC,kBACd,yBAAKP,UAAU,sBACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAgBR,SAAUA,QCLlCgB,iBACI,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,W","file":"static/js/main.0e97c061.chunk.js","sourcesContent":["export const messages = [\r\n  {\r\n    id: \"chat-5-1090\",\r\n    from: { name: \"Ольга\" },\r\n    type: \"response\",\r\n    time: \"10:10\",\r\n    text: \"Привет, Виктор. Как дела? Как идет работа над проектом?\",\r\n  },\r\n  {\r\n    id: \"chat-5-1091\",\r\n    from: { name: \"Виктор\" },\r\n    type: \"message\",\r\n    time: \"10:12\",\r\n    text:\r\n      \"Привет. Давай сегодня созвонимся. Проект практически готов, и у меня есть что показать.\",\r\n  },\r\n  {\r\n    id: \"chat-5-1092\",\r\n    from: { name: \"Ольга\" },\r\n    type: \"response\",\r\n    time: \"10:14\",\r\n    text:\r\n      \"Не уверена что сегодня получится. Не все еще в офисе. Давай уточню через час. Возникли ли какие-либо проблемы на последней стадии проекта?\",\r\n  },\r\n  {\r\n    id: \"chat-5-1093\",\r\n    from: { name: \"Виктор\" },\r\n    type: \"message\",\r\n    time: \"10:20\",\r\n    text: \"Нет, все прошло гладко. Очень хочу показать всё команде.\",\r\n  },\r\n  {\r\n    id: \"chat-5-1094\",\r\n    from: { name: \"Виктор\" },\r\n    type: \"typing\",\r\n    time: \"10:31\",\r\n  },\r\n];\r\n","import React, { FC } from \"react\";\nimport { MessageProps } from \"types\";\n\nconst Message: FC<MessageProps> = ({ name, text, time }) => (\n  <li className=\"clearfix\">\n    <div className=\"message-data align-right\">\n      <span className=\"message-data-time\">{time}</span> &nbsp; &nbsp;\n      <span className=\"message-data-name\">{name}</span>\n      <i className=\"fa fa-circle me\" />\n    </div>\n    <div className=\"message other-message float-right\">{text}</div>\n  </li>\n);\n\nexport default Message;\n","import React, { FC } from \"react\";\nimport { MessageProps } from \"types\";\n\nconst Response: FC<MessageProps> = ({ name, text, time }) => (\n  <li>\n    <div className=\"message-data\">\n      <span className=\"message-data-name\">\n        <i className=\"fa fa-circle online\" />\n        {name}\n      </span>\n      <span className=\"message-data-time\">{time}</span>\n    </div>\n    <div className=\"message my-message\">{text}</div>\n  </li>\n);\n\nexport default Response;\n","const Typing = () => null;\r\n\r\nexport default Typing;","import React, { FC } from \"react\";\nimport Message from \"../messageItems/Message\";\nimport Response from \"../messageItems/Response\";\nimport Typing from \"../messageItems/Typing\";\n\ninterface SenderProps {\n  [key: string]: string;\n}\n\ninterface MessageHistoryProps {\n  id: string;\n  from: SenderProps;\n  type: string;\n  time: string;\n  text?: any;\n}\n\ninterface MessageProps {\n  messages: MessageHistoryProps[];\n}\n\nconst MessageHistory: FC<MessageProps> = ({ messages }) => {\n  if (!messages.length) {\n    return null;\n  }\n  return (\n    <ul>\n      {messages.map(\n        ({ id, from: { name }, type, time, text }: MessageHistoryProps) => {\n          return type === \"message\" ? (\n            <Message key={id} name={name} time={time} text={text} />\n          ) : type === \"response\" ? (\n            <Response key={id} name={name} time={time} text={text} />\n          ) : (\n            <Typing key={id} />\n          );\n        }\n      )}\n    </ul>\n  );\n};\n\nexport default MessageHistory;\n","import React, { FC } from \"react\";\nimport \"./css/main.css\";\nimport { messages } from \"data\";\nimport MessageHistory from \"components/messageHistory/MessageHistory\";\n\nconst App: FC = () => (\n  <div className=\"clearfix container\">\n    <div className=\"chat\">\n      <div className=\"chat-history\">\n        <MessageHistory messages={messages} />\n      </div>\n    </div>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\r\nimport {render} from 'react-dom';\r\nimport App from './App';\r\n\r\nrender(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}